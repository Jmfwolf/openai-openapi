/*
 * OpenAI API
 * The OpenAI REST API
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package space.fraktured.ai.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import space.fraktured.ai.client.model.CreateClassificationResponseSelectedExamplesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import space.fraktured.ai.client.JSON;

/**
 * CreateClassificationResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-03-27T16:51:01.357479157-07:00[America/Los_Angeles]")
public class CreateClassificationResponse {
  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private String _object;

  public static final String SERIALIZED_NAME_MODEL = "model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private String model;

  public static final String SERIALIZED_NAME_SEARCH_MODEL = "search_model";
  @SerializedName(SERIALIZED_NAME_SEARCH_MODEL)
  private String searchModel;

  public static final String SERIALIZED_NAME_COMPLETION = "completion";
  @SerializedName(SERIALIZED_NAME_COMPLETION)
  private String completion;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_SELECTED_EXAMPLES = "selected_examples";
  @SerializedName(SERIALIZED_NAME_SELECTED_EXAMPLES)
  private List<CreateClassificationResponseSelectedExamplesInner> selectedExamples = new ArrayList<>();

  public CreateClassificationResponse() {
  }

  public CreateClassificationResponse _object(String _object) {
    
    this._object = _object;
    return this;
  }

   /**
   * Get _object
   * @return _object
  **/
  @javax.annotation.Nullable

  public String getObject() {
    return _object;
  }


  public void setObject(String _object) {
    this._object = _object;
  }


  public CreateClassificationResponse model(String model) {
    
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @javax.annotation.Nullable

  public String getModel() {
    return model;
  }


  public void setModel(String model) {
    this.model = model;
  }


  public CreateClassificationResponse searchModel(String searchModel) {
    
    this.searchModel = searchModel;
    return this;
  }

   /**
   * Get searchModel
   * @return searchModel
  **/
  @javax.annotation.Nullable

  public String getSearchModel() {
    return searchModel;
  }


  public void setSearchModel(String searchModel) {
    this.searchModel = searchModel;
  }


  public CreateClassificationResponse completion(String completion) {
    
    this.completion = completion;
    return this;
  }

   /**
   * Get completion
   * @return completion
  **/
  @javax.annotation.Nullable

  public String getCompletion() {
    return completion;
  }


  public void setCompletion(String completion) {
    this.completion = completion;
  }


  public CreateClassificationResponse label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @javax.annotation.Nullable

  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    this.label = label;
  }


  public CreateClassificationResponse selectedExamples(List<CreateClassificationResponseSelectedExamplesInner> selectedExamples) {
    
    this.selectedExamples = selectedExamples;
    return this;
  }

  public CreateClassificationResponse addSelectedExamplesItem(CreateClassificationResponseSelectedExamplesInner selectedExamplesItem) {
    if (this.selectedExamples == null) {
      this.selectedExamples = new ArrayList<>();
    }
    this.selectedExamples.add(selectedExamplesItem);
    return this;
  }

   /**
   * Get selectedExamples
   * @return selectedExamples
  **/
  @javax.annotation.Nullable

  public List<CreateClassificationResponseSelectedExamplesInner> getSelectedExamples() {
    return selectedExamples;
  }


  public void setSelectedExamples(List<CreateClassificationResponseSelectedExamplesInner> selectedExamples) {
    this.selectedExamples = selectedExamples;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateClassificationResponse createClassificationResponse = (CreateClassificationResponse) o;
    return Objects.equals(this._object, createClassificationResponse._object) &&
        Objects.equals(this.model, createClassificationResponse.model) &&
        Objects.equals(this.searchModel, createClassificationResponse.searchModel) &&
        Objects.equals(this.completion, createClassificationResponse.completion) &&
        Objects.equals(this.label, createClassificationResponse.label) &&
        Objects.equals(this.selectedExamples, createClassificationResponse.selectedExamples);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_object, model, searchModel, completion, label, selectedExamples);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateClassificationResponse {\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    searchModel: ").append(toIndentedString(searchModel)).append("\n");
    sb.append("    completion: ").append(toIndentedString(completion)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    selectedExamples: ").append(toIndentedString(selectedExamples)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("object");
    openapiFields.add("model");
    openapiFields.add("search_model");
    openapiFields.add("completion");
    openapiFields.add("label");
    openapiFields.add("selected_examples");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CreateClassificationResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CreateClassificationResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateClassificationResponse is not found in the empty JSON string", CreateClassificationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CreateClassificationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateClassificationResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("object") != null && !jsonObj.get("object").isJsonNull()) && !jsonObj.get("object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object").toString()));
      }
      if ((jsonObj.get("model") != null && !jsonObj.get("model").isJsonNull()) && !jsonObj.get("model").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `model` to be a primitive type in the JSON string but got `%s`", jsonObj.get("model").toString()));
      }
      if ((jsonObj.get("search_model") != null && !jsonObj.get("search_model").isJsonNull()) && !jsonObj.get("search_model").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `search_model` to be a primitive type in the JSON string but got `%s`", jsonObj.get("search_model").toString()));
      }
      if ((jsonObj.get("completion") != null && !jsonObj.get("completion").isJsonNull()) && !jsonObj.get("completion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `completion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("completion").toString()));
      }
      if ((jsonObj.get("label") != null && !jsonObj.get("label").isJsonNull()) && !jsonObj.get("label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label").toString()));
      }
      if (jsonObj.get("selected_examples") != null && !jsonObj.get("selected_examples").isJsonNull()) {
        JsonArray jsonArrayselectedExamples = jsonObj.getAsJsonArray("selected_examples");
        if (jsonArrayselectedExamples != null) {
          // ensure the json data is an array
          if (!jsonObj.get("selected_examples").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `selected_examples` to be an array in the JSON string but got `%s`", jsonObj.get("selected_examples").toString()));
          }

          // validate the optional field `selected_examples` (array)
          for (int i = 0; i < jsonArrayselectedExamples.size(); i++) {
            CreateClassificationResponseSelectedExamplesInner.validateJsonObject(jsonArrayselectedExamples.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateClassificationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateClassificationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateClassificationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateClassificationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateClassificationResponse>() {
           @Override
           public void write(JsonWriter out, CreateClassificationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateClassificationResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreateClassificationResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreateClassificationResponse
  * @throws IOException if the JSON string is invalid with respect to CreateClassificationResponse
  */
  public static CreateClassificationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateClassificationResponse.class);
  }

 /**
  * Convert an instance of CreateClassificationResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

